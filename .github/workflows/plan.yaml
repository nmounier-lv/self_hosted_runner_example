# Reusable workflow for plan
name: plan
on:
  workflow_call:
    inputs:
      environment:
        description: |
          Environment: relative path to the folder containing the tfvars file and
          backend config file, and GH environment in the repository
        required: true
        type: string

jobs:
  # TF_PLAN | GENERATE TFPLAN FILE, VALIDATE & SAVE
  TF_PLAN:
    name: plan
    # Run on Self-Runner developed and hosted by LV_NEO
    runs-on: self-hosted

    # this is needed since we are running terraform with read-only permissions
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:

      # Checkout
      - name: Checkout the repository from remote to local
        uses: actions/checkout@v4

      - name: tf init
        run: terraform init -reconfigure -backend-config=${{ inputs.environment }}/config.gcs.tfbackend
      
      - name: 'Test: check wd content'
        run: ls -la

      # TODO Log in GCP once from the pod in the GKE cluster
      # - name: Log in to GCP
      #   uses:
      #   with:
      #     creds: '${{ secrets.TF_AZ_CREDS_PRJ }}'

      # Generates an execution plan for Terraform
      # An exit code of 0 indicated no changes, 1 a terraform failure, 2 there are pending changes.
      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0
          terraform plan --var-file=./${{ inputs.environment }}/terraform.tfvars -detailed-exitcode -out ${{ inputs.environment }}/tfplan || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          echo "Exit code: $exitcode"

          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else
            exit 0
          fi

      # Save plan to artifacts
      - name: Upload Terraform Plan file (tfplan) to gh artifacts store
        uses: actions/upload-artifact@v3/node20
        with:
          name: ${{ inputs.environment }}-tfplan
          path: ${{ inputs.environment }}/tfplan